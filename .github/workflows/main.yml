name: main
on: 
  push: 
   branches: 
   - main
   - master
   - develop
   - 'feature/**'
   - 'feature*'  
   - 'release*'
  pull_request:
    types: [synchronize]
    branches: 
    - develop
    - master
    - main
jobs: 
  Compile:
    uses: Enterprise-Devops/Devopstemplates/.github/workflows/Java-Build.yml@main
    with:
      CI_IMAGE: "stellantis-harbor.artifactory.intra.fcagroup.com/bt_22.04_jdk8_node14:v1.0"
      Build_Command: | 
                echo "Build is not required"
      Artifact_path: "./*"
      Artifact_Key: "${{ github.sha }}-${{github.run_id}}"
  CodeQuality:
      needs: [ Compile ]
      if: (success('Compile'))
      uses: Enterprise-Devops/Devopstemplates/.github/workflows/PYTHONSonarQube.yml@main
      with:
         CI_IMAGE: "stellantis-harbor.artifactory.intra.fcagroup.com/bt_22.04_jdk11_node14:v1.0"
         BuildTool: "python"
         Commands: |
            
            apt-get update && apt-get install -y python3-pip python3-setuptools
            python3 -m pip install coverage
            echo "pyhton path setup"
            export PYTHONPATH=${PWD}
            echo " pyhton path: $PYTHONPATH"
            python3 -m pip install pytest
            python3 -m pip install requests
            python3 -m pip install pymysql
            python3 -m pip install lxml
            python3 -m coverage run -m pytest  -s
            python3 -m coverage report -m
            python3 -m coverage xml
         SourcePath: "."
         TestPath: "."
         CoveragePath: "coverage.xml"
      secrets:    
        sonar_host_url: ${{ secrets.SONAR_HOST_URL }}
        sonar_login: ${{ secrets.SONAR_LOGIN_TOKEN }}
  QualityGates:
     needs: CodeQuality
     if: success('CodeQuality')
     uses:  Enterprise-Devops/Devopstemplates/.github/workflows/QualityGate.yml@main
     with:
       CI_Image: "stellantis-harbor.artifactory.intra.fcagroup.com/azure-swa:v1.0.0"
     secrets:    
       sonar_host_url: ${{ secrets.SONAR_HOST_URL }}
       sonar_login: ${{ secrets.SONAR_LOGIN_TOKEN }}
  Code_Analysis:
    needs: [ QualityGates]
    if: success('QualityGates') && github.event.ref == 'refs/heads/develop'
    uses: Enterprise-Devops/Devopstemplates/.github/workflows/cxscan_oauthtoken.yml@main
    with:   
     CI_IMAGE: "stellantis-harbor.artifactory.intra.fcagroup.com/ubuntu_base_22.04:v1.0"
     SOURCE_DIR: "."
    secrets: 
      cx_base_url: ${{ secrets.CX_BASE_URL }}
      cx_tenant: ${{ secrets.CX_TENANT }}
      cx_client_id: ${{ secrets.CX_CLIENT_ID }}
      cx_client_secret: ${{ secrets.CX_CLIENT_SECRET }}
  
  ChangeRequest_Validation:
     needs: [ QualityGates ]
     if: (github.event.ref == 'refs/heads/master' || github.event.ref == 'refs/heads/main') &&
         success('QualityGates')
     uses: Enterprise-Devops/Devopstemplates/.github/workflows/CRValidation.yml@main
     with:
       CD_IMAGE: "stellantis-harbor.artifactory.intra.fcagroup.com/azure-swa:v1.0.0"
       changeRequestNo: "CHG0643212"
       AMSID: "5559"
  Dev-Deploy: 
    needs: [QualityGates]
    if: github.event.ref != 'refs/heads/main' && github.event.ref != 'refs/heads/master' && github.event.ref != 'refs/heads/develop' && (success('QualityGates'))
    uses: Enterprise-Devops/Devopstemplates/.github/workflows/DeployAzure-MLJobCreation.yml@main
    with: 
      CD_Image: "stellantis-harbor.artifactory.intra.fcagroup.com/deployment_cli:v1.0"
      resource_group: "rg-05559-d-001"
      ml_workspace: "azml-05559-d-001"
      location: "eastus"
      TENANT_ID: "c1aee0b1-83f4-4518-a226-e7508aec4c2d"
      Subscription_ID: "bc4dd254-6453-4b74-8bc6-a31cb380f3c1"
      Artifact_path: "./*"
      Artifact_Key: "${{ github.sha }}-${{github.run_id}}"
      config_file: "pipeline.yml"
    secrets: 
      Client_ID: ${{ secrets.DEV_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.DEV_CLIENT_SECRET }}
  Stage-Deploy: 
    needs: [Code_Analysis]
    if: github.event.ref == 'refs/heads/develop' && (success('Code_Analysis'))
    uses: Enterprise-Devops/Devopstemplates/.github/workflows/DeployAzure-MLJobCreation.yml@main
    with: 
      CD_Image: "stellantis-harbor.artifactory.intra.fcagroup.com/deployment_cli:v1.0"
      resource_group: "rg-05559-s-001"
      ml_workspace: "azml-05559-s-001"
      location: "eastus"
      TENANT_ID: "c1aee0b1-83f4-4518-a226-e7508aec4c2d"
      Subscription_ID: "bc4dd254-6453-4b74-8bc6-a31cb380f3c1"
      Artifact_path: "./*"
      Artifact_Key: "${{ github.sha }}-${{github.run_id}}"
      config_file: "pipeline.yml"
    secrets: 
      Client_ID: ${{ secrets.STAGE_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.STAGE_CLIENT_SECRET }}
  Prod-Deploy: 
    needs: [ChangeRequest_Validation]
    if: github.event.ref == 'refs/heads/master' && (success('ChangeRequest_Validation'))
    uses: Enterprise-Devops/Devopstemplates/.github/workflows/DeployAzure-MLJobCreation.yml@main
    with: 
      CD_Image: "stellantis-harbor.artifactory.intra.fcagroup.com/deployment_cli:v1.0"
      resource_group: "rg-05559-p-001"
      ml_workspace: "azml-05559-p-001"
      location: "eastus"
      TENANT_ID: "c1aee0b1-83f4-4518-a226-e7508aec4c2d"
      Subscription_ID: "bc4dd254-6453-4b74-8bc6-a31cb380f3c1"
      Artifact_path: "./*"
      Artifact_Key: "${{ github.sha }}-${{github.run_id}}"
      config_file: "pipeline.yml"
    secrets: 
      Client_ID: ${{ secrets.PROD_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.PROD_CLIENT_SECRET }}
